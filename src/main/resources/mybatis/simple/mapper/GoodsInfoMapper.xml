<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.junge.demo.mybatis.simple.dao.GoodsInfoMapper">
  <resultMap id="BaseResultMap" type="com.junge.demo.mybatis.simple.model.GoodsInfo">
    <id column="goodsid" jdbcType="BIGINT" property="goodsid" />
    <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="unitname" jdbcType="VARCHAR" property="unitname" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="brandid" jdbcType="INTEGER" property="brandid" />
  </resultMap>
  <sql id="Base_Column_List">
    goodsid, goodsname, barcode, price, unitname, color, brandid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_demo_goodsinfo
    where goodsid = #{goodsid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_demo_goodsinfo
    where goodsid = #{goodsid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.junge.demo.mybatis.simple.model.GoodsInfo" useGeneratedKeys="true" keyProperty="goodsid" >
    insert into t_demo_goodsinfo (goodsid, goodsname, barcode, 
      price, unitname, color, 
      brandid)
    values (#{goodsid,jdbcType=BIGINT}, #{goodsname,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, 
      #{price,jdbcType=NUMERIC}, #{unitname,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{brandid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.junge.demo.mybatis.simple.model.GoodsInfo" useGeneratedKeys="true" keyProperty="goodsid">
    insert into t_demo_goodsinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsid,
      </if>
      <if test="goodsname != null">
        goodsname,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="unitname != null">
        unitname,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="brandid != null">
        brandid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=BIGINT},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="unitname != null">
        #{unitname,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="brandid != null">
        #{brandid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.junge.demo.mybatis.simple.model.GoodsInfo">
    update t_demo_goodsinfo
    <set>
      <if test="goodsname != null">
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="unitname != null">
        unitname = #{unitname,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="brandid != null">
        brandid = #{brandid,jdbcType=INTEGER},
      </if>
    </set>
    where goodsid = #{goodsid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junge.demo.mybatis.simple.model.GoodsInfo">
    update t_demo_goodsinfo
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      unitname = #{unitname,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      brandid = #{brandid,jdbcType=INTEGER}
    where goodsid = #{goodsid,jdbcType=BIGINT}
  </update>
</mapper>